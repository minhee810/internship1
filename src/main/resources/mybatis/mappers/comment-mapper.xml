<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.demo.comment.mapper.CommentMapper">

	<!-- 계층형 쿼리문으로 댓글 불러오기 -->
	<select id="getCommentList" parameterType="hashMap" resultType="commentDto">
    <![CDATA[

        SELECT
            LEVEL,
            COMMENT_ID, 
            BOARD_ID,
            DEPTH,
            PARENT_ID,
            LPAD(' ', 4 *(LEVEL -1)) || COMMENT_CONTENT COMMENT_CONTENT,
            CREATED_DATE,
            WRITER,
            USERNAME,
            CASE WHEN #{userId} = 2 THEN 2
            	WHEN WRITER = #{userId} THEN 1
            	ELSE 0 END AS PRINCIPAL,  
            IS_DELETED,
             (select USERNAME from users a join comments b on a.USER_ID= b.WRITER where b.comment_id = f.PARENT_ID) AS PARENT_USERNAME

        FROM (
            SELECT C.* , U.USERNAME, U.USER_ID
            FROM COMMENTS C 
            JOIN USERS U 
            ON U.USER_ID = C.WRITER
            WHERE C.BOARD_ID  = #{boardId}
        ) f
        START WITH PARENT_ID = 0
        CONNECT BY PRIOR COMMENT_ID = PARENT_ID
        ORDER SIBLINGS BY COMMENT_ID

		]]>
			
		</select>
		<!-- 댓글 작성하기 -->
		<insert id="saveComment" parameterType="commentDto">	
			<![CDATA[
			INSERT INTO COMMENTS (COMMENT_ID, COMMENT_CONTENT, PARENT_ID, DEPTH, WRITER, BOARD_ID)
			VALUES (COMMENTS_SEQ.NEXTVAL, #{commentContent}, #{parentId}, #{depth}, #{writer}, #{boardId})
			]]>
			<selectKey keyProperty="commentId" resultType="long" order="AFTER">
			       SELECT MAX(COMMENT_ID) FROM COMMENTS
			</selectKey>
		</insert>
		
		<!-- 댓글 삭제하기 -->
		<update id="deleteComment" parameterType="hashMap">
			<![CDATA[
			 	UPDATE COMMENTS  
				SET 
				IS_DELETED = 1
			WHERE COMMENT_ID = #{commentId} AND WRITER = #{writer}
			]]>
		</update>
		
		<!-- 댓글 수정하기 -->
		<update id="updateComment" parameterType="commentDto">
			<![CDATA[
				UPDATE COMMENTS
	        	SET COMMENT_CONTENT = #{commentContent}
	          	, MODIFIED_DATE = sysdate
	        	WHERE COMMENT_ID = #{commentId}
			]]>
		
		</update>
		
		<!-- 댓글 개수 -->
		<select id="count" parameterType="long" resultType="int">
	        SELECT count(*) FROM COMMENTS
	        WHERE BOARD_ID = #{boardId} AND PARENT_ID = 0
	    </select>
			
		<!-- 댓글 한 개 조회 -->
		<select id="selectOneComment" parameterType="long" resultType="commentDto">
	        SELECT C.*, U.USERNAME 
	        FROM COMMENTS C
	        JOIN USERS U
	        ON U.USER_ID = C.WRITER
	        WHERE COMMENT_ID = #{commentId}
	    </select>
	    
	    <select id="hasReplies" resultType="int" parameterType="long">
		    <![CDATA[
		    	SELECT COUNT(*) FROM COMMENTS WHERE PARENT_ID = #{commentId}
		    ]]>
	    </select>
	    
	    <select id="parentUsername" resultType="String" parameterType="long">
		    SELECT u.USERNAME 
			FROM COMMENTS c
			JOIN USERS u ON u.USER_ID = c.WRITER  
			WHERE COMMENT_ID = #{commentId}
	    </select>
		
</mapper>